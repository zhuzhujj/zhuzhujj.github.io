<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>zhuZhu • Posts by &#34;js&#34; tag</title>
    <link href="http://example.com" />
    <updated>2023-09-06T13:44:25.000Z</updated>
    <category term="js" />
    <category term="vue3" />
    <category term="egg.js" />
    <category term="TS," />
    <category term="nuxt" />
    <category term="测试" />
    <entry>
        <id>http://example.com/2023/09/06/%E6%89%8B%E5%86%99promise/</id>
        <title>手写promise</title>
        <link rel="alternate" href="http://example.com/2023/09/06/%E6%89%8B%E5%86%99promise/"/>
        <content type="html">&lt;h1 id=&#34;手写Promise&#34;&gt;&lt;a href=&#34;#手写Promise&#34; class=&#34;headerlink&#34; title=&#34;手写Promise&#34;&gt;&lt;/a&gt;手写Promise&lt;/h1&gt;&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// 定义三个状态&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const PENDING = &amp;#x27;PENDING&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  FULFILLEN = &amp;#x27;FULFILLEN&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  REJECTEN = &amp;#x27;REJECTEN&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  // 用于依赖收集&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  onFulfilledCallBack = [],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  onRejectedCallBack = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class MyPromise &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  constructor(executor) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.status = PENDING&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.value = undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.reason = undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const resolve = (value) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      if (this.status === PENDING) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.status = FULFILLEN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.value = value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // 发布&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        onFulfilledCallBack.forEach(fn =&amp;gt; fn())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const reject = (reason) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      if (this.status === PENDING) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.status = REJECTEN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.reason = reason&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // 发布&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        onRejectedCallBack.forEach(fn =&amp;gt; fn())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      executor(resolve, reject)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; catch (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      reject(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  // 根据状态调用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  then (onFulfilled, onRejected) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (this.status === FULFILLEN) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      onFulfilled(this.value)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (this.status === REJECTEN) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      onRejected(this.reason)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (this.status === PENDING) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      // 订阅&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      onFulfilledCallBack.push(() =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        onFulfilled(this.value)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      onRejectedCallBack.push(() =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        onRejected(this.reason)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;module.exports = MyPromise&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="js" />
        <updated>2023-09-06T13:44:25.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/09/06/instanceof%E5%AE%9E%E7%8E%B0/</id>
        <title>instanceof实现</title>
        <link rel="alternate" href="http://example.com/2023/09/06/instanceof%E5%AE%9E%E7%8E%B0/"/>
        <content type="html">&lt;h1 id=&#34;instanceof实现原理&#34;&gt;&lt;a href=&#34;#instanceof实现原理&#34; class=&#34;headerlink&#34; title=&#34;instanceof实现原理&#34;&gt;&lt;/a&gt;instanceof实现原理&lt;/h1&gt;&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//  instanceof 实现&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//  [] instanceof Array&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function myInstanceof (left, right) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  let proto = Object.getPrototypeOf(left) // 获取__proto__&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  let protoType = right.prototype&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  // 循环判断 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  while (1) &amp;#123; // 在原型链上寻找&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (!proto) return false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (proto == protoType) return true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    proto = Object.getPrototypeOf(proto)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(myInstanceof(1, Array));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="js" />
        <updated>2023-09-06T01:30:10.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/08/17/Set-Map/</id>
        <title>Set,Map</title>
        <link rel="alternate" href="http://example.com/2023/08/17/Set-Map/"/>
        <content type="html">&lt;h1 id=&#34;Set、Map、WeakSet、WeakMap&#34;&gt;&lt;a href=&#34;#Set、Map、WeakSet、WeakMap&#34; class=&#34;headerlink&#34; title=&#34;Set、Map、WeakSet、WeakMap&#34;&gt;&lt;/a&gt;Set、Map、WeakSet、WeakMap&lt;/h1&gt;&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;blockquote&gt;
&lt;p&gt;引用自 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vZXM2L2RhdGFTdHJ1Y3R1cmUuaHRtbCMlRTclQjElQkIlRTUlOUUlOEIlRTclOUElODQlRTglQkQlQUMlRTYlOEQlQTI=&#34;&gt;Set、Map、WeakSet、WeakMap | Vue3 (vue3js.cn)&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果要用一句来描述，我们可以说 &lt;strong&gt;Set是一种叫做集合的数据结构，Map是一种叫做字典的数据结构&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;那什么是集合？什么又是字典呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;集合&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;集合，是由一堆无序的、相关联的，且不重复的内存结构【数学中称为元素】组成的组合&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;字典&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;字典（dictionary）是一些元素的集合。每个元素有一个称作key 的域，不同元素的key 各不相同&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么集合和字典又有什么区别呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;共同点：集合、字典都可以存储不重复的值&lt;/li&gt;
&lt;li&gt;不同点：集合是以[值，值]的形式存储元素，字典是以[键，值]的形式存储&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;背景&#34;&gt;&lt;a href=&#34;#背景&#34; class=&#34;headerlink&#34; title=&#34;#背景&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vZXM2L2RhdGFTdHJ1Y3R1cmUuaHRtbCMlRTglODMlOEMlRTYlOTklQUY=&#34;&gt;#&lt;/span&gt;背景&lt;/h2&gt;&lt;p&gt;大多数主流编程语言都有多种内置的数据集合。例如&lt;code&gt;Python&lt;/code&gt;拥有列表（&lt;code&gt;list&lt;/code&gt;）、元组（&lt;code&gt;tuple&lt;/code&gt;）和字典（&lt;code&gt;dictionary&lt;/code&gt;）,Java有列表（&lt;code&gt;list&lt;/code&gt;）、集合（&lt;code&gt;set&lt;/code&gt;)、队列（&lt;code&gt;queue&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;然而 &lt;code&gt;JavaScript&lt;/code&gt; 直到&lt;code&gt;ES6&lt;/code&gt;的发布之前，只拥有数组（&lt;code&gt;array&lt;/code&gt;）和对象（&lt;code&gt;object&lt;/code&gt;）这两个内建的数据集合&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;ES6&lt;/code&gt; 之前,我们通常使用内置的 &lt;code&gt;Object&lt;/code&gt; 模拟Map&lt;/p&gt;
&lt;p&gt;但是这样模拟出来的&lt;code&gt;map&lt;/code&gt;会有一些缺陷，如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Object&lt;/code&gt;的属性键是&lt;code&gt;String&lt;/code&gt;或&lt;code&gt;Symbol&lt;/code&gt;，这限制了它们作为不同数据类型的键/值对集合的能力&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Object&lt;/code&gt;不是设计来作为一种数据集合，因此没有直接有效的方法来确定对象具有多少属性&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;Set&#34;&gt;&lt;a href=&#34;#Set&#34; class=&#34;headerlink&#34; title=&#34;#Set&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vZXM2L2RhdGFTdHJ1Y3R1cmUuaHRtbCNzZXQ=&#34;&gt;#&lt;/span&gt;Set&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;定义: &lt;code&gt;Set&lt;/code&gt; 对象允许你存储任何类型的唯一值，无论是原始值或者是对象引用，&lt;code&gt;Set&lt;/code&gt;对象是值的集合，你可以按照插入的顺序迭代它的元素。 &lt;code&gt;Set&lt;/code&gt;中的元素只会出现一次，即 &lt;code&gt;Set&lt;/code&gt; 中的元素是唯一的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Set&lt;/code&gt;本身是一个构造函数，用来生成 &lt;code&gt;Set&lt;/code&gt; 数据结构&lt;/p&gt;
&lt;h3 id=&#34;基本使用&#34;&gt;&lt;a href=&#34;#基本使用&#34; class=&#34;headerlink&#34; title=&#34;#基本使用&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vZXM2L2RhdGFTdHJ1Y3R1cmUuaHRtbCMlRTUlOUYlQkElRTYlOUMlQUMlRTQlQkQlQkYlRTclOTQlQTg=&#34;&gt;#&lt;/span&gt;基本使用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;语法&lt;br&gt;&lt;code&gt;new Set([iterable])&lt;/code&gt; 接收一个数组（或者具有 iterable 接口的其他数据结构）, 返回一个新的&lt;code&gt;Set&lt;/code&gt;对象&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; set = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;([&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(set) &lt;span class=&#34;comment&#34;&gt;// &amp;#123;1,2&amp;#125; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码可以看出 &lt;code&gt;Set&lt;/code&gt; 是可以去除数组中的重复元素&lt;/p&gt;
&lt;h3 id=&#34;属性及方法&#34;&gt;&lt;a href=&#34;#属性及方法&#34; class=&#34;headerlink&#34; title=&#34;#属性及方法&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vZXM2L2RhdGFTdHJ1Y3R1cmUuaHRtbCMlRTUlQjElOUUlRTYlODAlQTclRTUlOEYlOEElRTYlOTYlQjklRTYlQjMlOTU=&#34;&gt;#&lt;/span&gt;属性及方法&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;size: 返回集合中所包含的元素的数量&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;([&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]).&lt;span class=&#34;property&#34;&gt;size&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;操作方法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add(value): 向集合中添加一个新的项&lt;/li&gt;
&lt;li&gt;delete(value): 从集合中删除一个值&lt;/li&gt;
&lt;li&gt;has(value): 如果值在集合中存在，返回ture, 否则返回false&lt;/li&gt;
&lt;li&gt;clear(): 移除集合中的所有项&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; set = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set.&lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set.&lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set.&lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set.&lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(set) &lt;span class=&#34;comment&#34;&gt;// &amp;#123;1,2,3&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set.&lt;span class=&#34;title function_&#34;&gt;has&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set.&lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set.&lt;span class=&#34;title function_&#34;&gt;has&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set.&lt;span class=&#34;title function_&#34;&gt;clear&lt;/span&gt;() &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;strong&gt;遍历方法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;keys(): 返回键名的遍历器&lt;/li&gt;
&lt;li&gt;values(): 返回键值的遍历器&lt;/li&gt;
&lt;li&gt;entries(): 返回键值对的遍历器&lt;/li&gt;
&lt;li&gt;forEach(): 使用回调函数遍历每个成员&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; set = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;([&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 由于set只有键值，没有键名，所以keys() values()行为完全一致&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;Array&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;from&lt;/span&gt;(set.&lt;span class=&#34;title function_&#34;&gt;keys&lt;/span&gt;())) &lt;span class=&#34;comment&#34;&gt;// [1,2,3,4]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;Array&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;from&lt;/span&gt;(set.&lt;span class=&#34;title function_&#34;&gt;values&lt;/span&gt;())) &lt;span class=&#34;comment&#34;&gt;// [1,2,3,4]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;Array&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;from&lt;/span&gt;(set.&lt;span class=&#34;title function_&#34;&gt;entries&lt;/span&gt;())) &lt;span class=&#34;comment&#34;&gt;//  [[1,1],[2,2],[3,3],[4,4]]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set.&lt;span class=&#34;title function_&#34;&gt;forEach&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;item&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123; &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(item)&amp;#125;) &lt;span class=&#34;comment&#34;&gt;// 1,2,3,4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;应用场景&#34;&gt;&lt;a href=&#34;#应用场景&#34; class=&#34;headerlink&#34; title=&#34;#应用场景&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vZXM2L2RhdGFTdHJ1Y3R1cmUuaHRtbCMlRTUlQkElOTQlRTclOTQlQTglRTUlOUMlQkElRTYlOTklQUY=&#34;&gt;#&lt;/span&gt;应用场景&lt;/h3&gt;&lt;p&gt;因为 &lt;code&gt;Set&lt;/code&gt; 结构的值是唯一的，我们可以很轻松的实现以下&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 数组去重&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; arr = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; unique = [... &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;(arr)];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; a = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;([&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; b = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;([&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 并集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; union = [...&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;([...a, ...b])]; &lt;span class=&#34;comment&#34;&gt;// [1,2,3,4]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 交集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; intersect = [...&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;([...a].&lt;span class=&#34;title function_&#34;&gt;filter&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; b.&lt;span class=&#34;title function_&#34;&gt;has&lt;/span&gt;(x)))]; [&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 差集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; difference = &lt;span class=&#34;title class_&#34;&gt;Array&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;from&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;([...a].&lt;span class=&#34;title function_&#34;&gt;filter&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; !b.&lt;span class=&#34;title function_&#34;&gt;has&lt;/span&gt;(x)))); [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;WeakSet&#34;&gt;&lt;a href=&#34;#WeakSet&#34; class=&#34;headerlink&#34; title=&#34;#WeakSet&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vZXM2L2RhdGFTdHJ1Y3R1cmUuaHRtbCN3ZWFrc2V0&#34;&gt;#&lt;/span&gt;WeakSet&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;WeakSet 对象是一些对象值的集合, 并且其中的每个对象值都只能出现一次。在WeakSet的集合中是唯一的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;WeakSet&lt;/code&gt; 的出现主要解决弱引用对象存储的场景, 其结构与&lt;code&gt;Set&lt;/code&gt;类似&lt;/p&gt;
&lt;p&gt;与&lt;code&gt;Set&lt;/code&gt;的区别&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与Set相比，WeakSet 只能是对象的集合，而不能是任何类型的任意值&lt;/li&gt;
&lt;li&gt;WeakSet集合中对象的引用为弱引用。 如果没有其他的对WeakSet中对象的引用，那么这些对象会被当成垃圾回收掉。 这也意味着WeakSet中没有存储当前对象的列表。 正因为这样，WeakSet 是不可枚举的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;WeakSet&lt;/code&gt; 的属性跟操作方法与 &lt;code&gt;Set&lt;/code&gt; 一致，不同的是 &lt;code&gt;WeakSet&lt;/code&gt; 没有遍历方法，因为其成员都是弱引用，弱引用随时都会消失，遍历机制无法保证成员的存在&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;上面一直有提到弱引用，那弱引用到底是指什么呢？&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;弱引用是指不能确保其引用的对象不会被垃圾回收器回收的引用，换句话说就是可能在任意时间被回收&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;Map&#34;&gt;&lt;a href=&#34;#Map&#34; class=&#34;headerlink&#34; title=&#34;#Map&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vZXM2L2RhdGFTdHJ1Y3R1cmUuaHRtbCNtYXA=&#34;&gt;#&lt;/span&gt;Map&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Map 对象保存键值对，并且能够记住键的原始插入顺序。任何值(对象或者原始值) 都可以作为一个键或一个值。一个Map对象在迭代时会根据对象中元素的插入顺序来进行 — 一个 for…of 循环在每次迭代后会返回一个形式为[key，value]的数组&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;基本使用-1&#34;&gt;&lt;a href=&#34;#基本使用-1&#34; class=&#34;headerlink&#34; title=&#34;#基本使用&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vZXM2L2RhdGFTdHJ1Y3R1cmUuaHRtbCMlRTUlOUYlQkElRTYlOUMlQUMlRTQlQkQlQkYlRTclOTQlQTgtMg==&#34;&gt;#&lt;/span&gt;基本使用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;new Map([iterable])` `Iterable` 可以是一个数组或者其他 `iterable` 对象，其元素为键值对(两个元素的数组，例如: [[ 1, &amp;#x27;one&amp;#x27; ],[ 2, &amp;#x27;two&amp;#x27; ]])。 每个键值对都会添加到新的 `Map&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let map = new Map()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(&amp;#x27;name&amp;#x27;, &amp;#x27;vuejs.cn&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(map.get(&amp;#x27;name&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;属性及方法-1&#34;&gt;&lt;a href=&#34;#属性及方法-1&#34; class=&#34;headerlink&#34; title=&#34;#属性及方法&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vZXM2L2RhdGFTdHJ1Y3R1cmUuaHRtbCMlRTUlQjElOUUlRTYlODAlQTclRTUlOEYlOEElRTYlOTYlQjklRTYlQjMlOTUtMg==&#34;&gt;#&lt;/span&gt;属性及方法&lt;/h3&gt;&lt;p&gt;基本跟 &lt;code&gt;Set&lt;/code&gt; 类似，同样具有如下方法 &lt;strong&gt;属性&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;size: 返回 Map 结构的元素总数&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; map = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Map&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.&lt;span class=&#34;title function_&#34;&gt;set&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;vuejs.cn&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(map.&lt;span class=&#34;property&#34;&gt;size&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Map&lt;/span&gt;([[&lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;vue3js.cn&amp;#x27;&lt;/span&gt;], [&lt;span class=&#34;string&#34;&gt;&amp;#x27;age&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;18&amp;#x27;&lt;/span&gt;]]).&lt;span class=&#34;property&#34;&gt;size&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;strong&gt;操作方法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;set(key, value): 向 Map 中加入或更新键值对&lt;/li&gt;
&lt;li&gt;get(key): 读取 key 对用的值，如果没有，返回 undefined&lt;/li&gt;
&lt;li&gt;has(key): 某个键是否在 Map 对象中，在返回 true 否则返回 false&lt;/li&gt;
&lt;li&gt;delete(key): 删除某个键，返回 true, 如果删除失败返回 false&lt;/li&gt;
&lt;li&gt;clear(): 删除所有元素&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; map = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Map&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.&lt;span class=&#34;title function_&#34;&gt;set&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;vue3js.cn&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.&lt;span class=&#34;title function_&#34;&gt;set&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;age&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;18&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(map) &lt;span class=&#34;comment&#34;&gt;// Map &amp;#123;&amp;quot;name&amp;quot; =&amp;gt; &amp;quot;vuejs.cn&amp;quot;, &amp;quot;age&amp;quot; =&amp;gt; &amp;quot;18&amp;quot;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// vue3js.cn &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.&lt;span class=&#34;title function_&#34;&gt;has&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.&lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.&lt;span class=&#34;title function_&#34;&gt;has&lt;/span&gt;(name) &lt;span class=&#34;comment&#34;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.&lt;span class=&#34;title function_&#34;&gt;clear&lt;/span&gt;() &lt;span class=&#34;comment&#34;&gt;// Map &amp;#123;&amp;#125; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;strong&gt;遍历方法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;keys()：返回键名的遍历器&lt;/li&gt;
&lt;li&gt;values()：返回键值的遍历器&lt;/li&gt;
&lt;li&gt;entries()：返回所有成员的遍历器&lt;/li&gt;
&lt;li&gt;forEach()：遍历 Map 的所有成员&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; map = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Map&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.&lt;span class=&#34;title function_&#34;&gt;set&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;vue3js.cn&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.&lt;span class=&#34;title function_&#34;&gt;set&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;age&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;18&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;([...map.&lt;span class=&#34;title function_&#34;&gt;keys&lt;/span&gt;()])  &lt;span class=&#34;comment&#34;&gt;// [&amp;quot;name&amp;quot;, &amp;quot;age&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;([...map.&lt;span class=&#34;title function_&#34;&gt;values&lt;/span&gt;()])  &lt;span class=&#34;comment&#34;&gt;// [&amp;quot;vue3js.cn&amp;quot;, &amp;quot;18&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;([...map.&lt;span class=&#34;title function_&#34;&gt;entries&lt;/span&gt;()]) &lt;span class=&#34;comment&#34;&gt;// [[&amp;#x27;name&amp;#x27;,&amp;#x27;vue3js.cn&amp;#x27;], [&amp;#x27;age&amp;#x27;,&amp;#x27;18&amp;#x27;]]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// name vuejs.cn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// age 18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.&lt;span class=&#34;title function_&#34;&gt;forEach&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;value, key&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123; &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(key, value)&amp;#125;) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;应用场景-1&#34;&gt;&lt;a href=&#34;#应用场景-1&#34; class=&#34;headerlink&#34; title=&#34;#应用场景&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vZXM2L2RhdGFTdHJ1Y3R1cmUuaHRtbCMlRTUlQkElOTQlRTclOTQlQTglRTUlOUMlQkElRTYlOTklQUYtMg==&#34;&gt;#&lt;/span&gt;应用场景&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Map&lt;/code&gt; 会保留所有元素的顺序, 是在基于可迭代的基础上构建的，如果考虑到元素迭代或顺序保留或键值类型丰富的情况下都可以使用，下面摘抄自 &lt;code&gt;vue3&lt;/code&gt; 源码中依赖收集的核心实现&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; depsMap = targetMap.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(target)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!depsMap) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  targetMap.&lt;span class=&#34;title function_&#34;&gt;set&lt;/span&gt;(target, (depsMap = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Map&lt;/span&gt;()))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; dep = depsMap.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!dep) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  depsMap.&lt;span class=&#34;title function_&#34;&gt;set&lt;/span&gt;(key, (dep = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;()))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!dep.&lt;span class=&#34;title function_&#34;&gt;has&lt;/span&gt;(activeEffect)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dep.&lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(activeEffect)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  activeEffect.&lt;span class=&#34;property&#34;&gt;deps&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(dep)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;WeakMap&#34;&gt;&lt;a href=&#34;#WeakMap&#34; class=&#34;headerlink&#34; title=&#34;#WeakMap&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vZXM2L2RhdGFTdHJ1Y3R1cmUuaHRtbCN3ZWFrbWFw&#34;&gt;#&lt;/span&gt;WeakMap&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;WeakMap 对象是一组键/值对的集合，其中的键是弱引用的。其键必须是对象，而值可以是任意的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;与&lt;code&gt;Map&lt;/code&gt;的区别&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Map 的键可以是任意类型，WeakMap 的键只能是对象类型&lt;/li&gt;
&lt;li&gt;WeakMap 键名所指向的对象，不计入垃圾回收机制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;WeakMap&lt;/code&gt; 的属性跟操作方法与 &lt;code&gt;Map&lt;/code&gt; 一致，同 &lt;code&gt;WeakSet&lt;/code&gt; 一样，因为是弱引用，所以 &lt;code&gt;WeakMap&lt;/code&gt; 也没有遍历方法&lt;/p&gt;
&lt;h2 id=&#34;类型的转换&#34;&gt;&lt;a href=&#34;#类型的转换&#34; class=&#34;headerlink&#34; title=&#34;#类型的转换&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vZXM2L2RhdGFTdHJ1Y3R1cmUuaHRtbCMlRTclQjElQkIlRTUlOUUlOEIlRTclOUElODQlRTglQkQlQUMlRTYlOEQlQTI=&#34;&gt;#&lt;/span&gt;类型的转换&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Map&lt;/code&gt; 转为 &lt;code&gt;Array&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 解构&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; map = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Map&lt;/span&gt;([[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], [&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;], [&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;([...map])    &lt;span class=&#34;comment&#34;&gt;// [[1, 1], [2, 2], [3, 3]]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// Array.from()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; map = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Map&lt;/span&gt;([[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], [&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;], [&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;Array&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;from&lt;/span&gt;(map))    &lt;span class=&#34;comment&#34;&gt;// [[1, 1], [2, 2], [3, 3]]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Array&lt;/code&gt; 转为 &lt;code&gt;Map&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; map = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Map&lt;/span&gt;([[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], [&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;], [&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(map)    &lt;span class=&#34;comment&#34;&gt;// Map &amp;#123;1 =&amp;gt; 1, 2 =&amp;gt; 2, 3 =&amp;gt; 3&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Map&lt;/code&gt; 转为 &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 非字符串键名会被转换为字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;mapToObj&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;map&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; obj = &lt;span class=&#34;title class_&#34;&gt;Object&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;create&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; [key, value] &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; map) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        obj[key] = value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; obj&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; map = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Map&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;set&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;vue3js.cn&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;set&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;age&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;18&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;mapToObj&lt;/span&gt;(map)  &lt;span class=&#34;comment&#34;&gt;// &amp;#123;name: &amp;quot;vue3js.cn&amp;quot;, age: &amp;quot;18&amp;quot;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Object&lt;/code&gt; 转为 &lt;code&gt;Map&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; obj = &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; map = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Map&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;Object&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;entries&lt;/span&gt;(obj))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;#总结&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vZXM2L2RhdGFTdHJ1Y3R1cmUuaHRtbCMlRTYlODAlQkIlRTclQkIlOTM=&#34;&gt;#&lt;/span&gt;总结&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Set、Map、WeakSet、WeakMap、都是一种集合的数据结构&lt;/li&gt;
&lt;li&gt;Set、WeakSet 是[值,值]的集合，且具有唯一性&lt;/li&gt;
&lt;li&gt;Map 和 WeakMap 是一种[键,值]的集合，Map 的键可以是任意类型，WeakMap 的键只能是对象类型&lt;/li&gt;
&lt;li&gt;Set 和 Map 有遍历方法，WeakSet 和 WeakMap 属于弱引用不可遍历&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="js" />
        <updated>2023-08-17T14:35:04.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/08/17/%E5%AF%B9%E8%B1%A1%E6%93%8D%E4%BD%9C%E7%9A%8414%E7%A7%8D%E6%96%B9%E6%B3%95/</id>
        <title>对象操作的14种方法</title>
        <link rel="alternate" href="http://example.com/2023/08/17/%E5%AF%B9%E8%B1%A1%E6%93%8D%E4%BD%9C%E7%9A%8414%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
        <content type="html">&lt;h1 id=&#34;js–对象操作的14种方法&#34;&gt;&lt;a href=&#34;#js–对象操作的14种方法&#34; class=&#34;headerlink&#34; title=&#34;js–对象操作的14种方法&#34;&gt;&lt;/a&gt;js–对象操作的14种方法&lt;/h1&gt;&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;blockquote&gt;
&lt;p&gt;定义一个 obj 对象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var obj = &amp;#123;a: 1, b: 2&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;1、获取原型-GetPrototypeOf&#34;&gt;&lt;a href=&#34;#1、获取原型-GetPrototypeOf&#34; class=&#34;headerlink&#34; title=&#34;1、获取原型 [[GetPrototypeOf]]&#34;&gt;&lt;/a&gt;1、获取原型 [[GetPrototypeOf]]&lt;/h2&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// 以下 3 种方式都获取到了 obj 的原型，但是只有第一种是函数式方法，是 js 内置提供的方法，推荐使用第一种&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(Object.getPrototypeOf(obj))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(obj.__proto__)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(Object.prototype)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;2、设置原型-SetPrototypeOf&#34;&gt;&lt;a href=&#34;#2、设置原型-SetPrototypeOf&#34; class=&#34;headerlink&#34; title=&#34;2、设置原型 [[SetPrototypeOf]]&#34;&gt;&lt;/a&gt;2、设置原型 [[SetPrototypeOf]]&lt;/h2&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Object.setPrototypeOf(obj, &amp;#123;c: 3&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(Object.getPrototypeOf(obj)) // obj 的 __proto__ 设置成了 &amp;#123;c: 3&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;3、判断是否可扩展-IsExtensible&#34;&gt;&lt;a href=&#34;#3、判断是否可扩展-IsExtensible&#34; class=&#34;headerlink&#34; title=&#34;3、判断是否可扩展 [[IsExtensible]]&#34;&gt;&lt;/a&gt;3、判断是否可扩展 [[IsExtensible]]&lt;/h2&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;console.log(Object.isExtensible(obj)) // true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 可扩展的意思是可以给对象添加属性&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;4、禁止扩展-PreventExtensions&#34;&gt;&lt;a href=&#34;#4、禁止扩展-PreventExtensions&#34; class=&#34;headerlink&#34; title=&#34;4、禁止扩展 [[PreventExtensions]]&#34;&gt;&lt;/a&gt;4、禁止扩展 [[PreventExtensions]]&lt;/h2&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Object.preventExtensions(obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;obj.c = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(obj) // &amp;#123;a: 1, b: 2&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(Object.isExtensible(obj)) // false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;5、获取自有属性-GetOwnProperty&#34;&gt;&lt;a href=&#34;#5、获取自有属性-GetOwnProperty&#34; class=&#34;headerlink&#34; title=&#34;5、获取自有属性 [[GetOwnProperty]]&#34;&gt;&lt;/a&gt;5、获取自有属性 [[GetOwnProperty]]&lt;/h2&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Object.setPrototypeOf(obj, &amp;#123;c: 3&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(Object.getOwnPropertyNames(obj)) // [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 这里只能获取到 obj 的自有属性，会把原型链上的属性排除掉&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;6、判断是否是自有属性-HasProperty&#34;&gt;&lt;a href=&#34;#6、判断是否是自有属性-HasProperty&#34; class=&#34;headerlink&#34; title=&#34;6、判断是否是自有属性 [[HasProperty]]&#34;&gt;&lt;/a&gt;6、判断是否是自有属性 [[HasProperty]]&lt;/h2&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;console.log(obj.hasOwnProperty(&amp;#x27;a&amp;#x27;)) // true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(obj.hasOwnProperty(&amp;#x27;c&amp;#x27;)) // false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Object.setPrototypeOf(obj, &amp;#123;c: 3&amp;#125;) // 设置原型属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(obj.hasOwnProperty(&amp;#x27;c&amp;#x27;)) // false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;7、拦截对象操作-DefineOwnProperty&#34;&gt;&lt;a href=&#34;#7、拦截对象操作-DefineOwnProperty&#34; class=&#34;headerlink&#34; title=&#34;7、拦截对象操作 [[DefineOwnProperty]]&#34;&gt;&lt;/a&gt;7、拦截对象操作 [[DefineOwnProperty]]&lt;/h2&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var obj2 = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Object.defineProperty(obj2, &amp;#x27;c&amp;#x27;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  set(value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(&amp;#x27;成功拦截了设置 c 属性的操作&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    obj[&amp;#x27;c&amp;#x27;] = value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  get() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(&amp;#x27;成功拦截了读取 c 属性的操作&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return obj[&amp;#x27;c&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;obj2.c = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(obj2.c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;8、获取-GET&#34;&gt;&lt;a href=&#34;#8、获取-GET&#34; class=&#34;headerlink&#34; title=&#34;8、获取 [[GET]]&#34;&gt;&lt;/a&gt;8、获取 [[GET]]&lt;/h2&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Object.setPrototypeOf(obj, &amp;#123;c: 3&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(obj.a) // 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(obj.c) // 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(&amp;#x27;c&amp;#x27; in obj) // true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;9、设置-SET&#34;&gt;&lt;a href=&#34;#9、设置-SET&#34; class=&#34;headerlink&#34; title=&#34;9、设置 [[SET]]&#34;&gt;&lt;/a&gt;9、设置 [[SET]]&lt;/h2&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;obj.a = 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;obj[&amp;#x27;b&amp;#x27;] = 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(obj) // &amp;#123;a: 4, b: 5&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;10、删除-Delete&#34;&gt;&lt;a href=&#34;#10、删除-Delete&#34; class=&#34;headerlink&#34; title=&#34;10、删除 [[Delete]]&#34;&gt;&lt;/a&gt;10、删除 [[Delete]]&lt;/h2&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;delete obj.a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(obj) // &amp;#123;b: 2&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;11、枚举-Enumerate&#34;&gt;&lt;a href=&#34;#11、枚举-Enumerate&#34; class=&#34;headerlink&#34; title=&#34;11、枚举 [[Enumerate]]&#34;&gt;&lt;/a&gt;11、枚举 [[Enumerate]]&lt;/h2&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Object.setPrototypeOf(obj, &amp;#123;c: 3&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for (var property in obj) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  console.log(property + &amp;#x27;: &amp;#x27; + obj[property])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 可以把原型链上的属性也枚举出来&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;12、获取键集合-OwnPropertyKeys&#34;&gt;&lt;a href=&#34;#12、获取键集合-OwnPropertyKeys&#34; class=&#34;headerlink&#34; title=&#34;12、获取键集合 [[OwnPropertyKeys]]&#34;&gt;&lt;/a&gt;12、获取键&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT0lRTklOUIlODYlRTUlOTAlODgmc3BtPTEwMDEuMjEwMS4zMDAxLjcwMjA=&#34;&gt;集合&lt;/span&gt; [[OwnPropertyKeys]]&lt;/h2&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Object.setPrototypeOf(obj, &amp;#123;c: 3&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(Object.keys(obj)) // [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 只能获取自有键，不能获取原型链上的键&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;13、调用函数&#34;&gt;&lt;a href=&#34;#13、调用函数&#34; class=&#34;headerlink&#34; title=&#34;13、调用函数&#34;&gt;&lt;/a&gt;13、调用函数&lt;/h2&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function test() &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;obj.test = function () &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;obj.test()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;14、实例化对象&#34;&gt;&lt;a href=&#34;#14、实例化对象&#34; class=&#34;headerlink&#34; title=&#34;14、实例化对象&#34;&gt;&lt;/a&gt;14、实例化对象&lt;/h2&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function Test() &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new Test()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="js" />
        <updated>2023-08-17T14:20:36.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/08/14/js%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%96%B9%E6%B3%95/</id>
        <title>js字符串方法</title>
        <link rel="alternate" href="http://example.com/2023/08/14/js%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%96%B9%E6%B3%95/"/>
        <content type="html">&lt;h1 id=&#34;js–字符串方法&#34;&gt;&lt;a href=&#34;#js–字符串方法&#34; class=&#34;headerlink&#34; title=&#34;js–字符串方法&#34;&gt;&lt;/a&gt;js–字符串方法&lt;/h1&gt;&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;blockquote&gt;
&lt;h2 id=&#34;操作方法-转换方法-模板匹配方法&#34;&gt;&lt;a href=&#34;#操作方法-转换方法-模板匹配方法&#34; class=&#34;headerlink&#34; title=&#34;操作方法 转换方法 模板匹配方法&#34;&gt;&lt;/a&gt;操作方法 转换方法 模板匹配方法&lt;/h2&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;一、操作方法&#34;&gt;&lt;a href=&#34;#一、操作方法&#34; class=&#34;headerlink&#34; title=&#34;一、操作方法&#34;&gt;&lt;/a&gt;一、操作方法&lt;/h2&gt;&lt;p&gt;我们也可将字符串常用的操作方法归纳为增、删、改、查，需要知道字符串的特点是一旦创建了，就不可变&lt;/p&gt;
&lt;h3 id=&#34;增&#34;&gt;&lt;a href=&#34;#增&#34; class=&#34;headerlink&#34; title=&#34;#增&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sIyVFNSVBMiU5RQ==&#34;&gt;#&lt;/span&gt;增&lt;/h3&gt;&lt;p&gt;这里增的意思并不是说直接增添内容，而是创建字符串的一个副本，再进行操作&lt;/p&gt;
&lt;p&gt;除了常用&lt;code&gt;+&lt;/code&gt;以及&lt;code&gt;$&amp;#123;&amp;#125;&lt;/code&gt;进行字符串拼接之外，还可通过&lt;code&gt;concat&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;concat&#34;&gt;&lt;a href=&#34;#concat&#34; class=&#34;headerlink&#34; title=&#34;#concat&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sI2NvbmNhdA==&#34;&gt;#&lt;/span&gt;concat&lt;/h4&gt;&lt;p&gt;用于将一个或多个字符串拼接成一个新字符串&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; stringValue = &lt;span class=&#34;string&#34;&gt;&amp;quot;hello &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; result = stringValue.&lt;span class=&#34;title function_&#34;&gt;concat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;world&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(result); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;hello world&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(stringValue); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;hello&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;删&#34;&gt;&lt;a href=&#34;#删&#34; class=&#34;headerlink&#34; title=&#34;#删&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sIyVFNSU4OCVBMA==&#34;&gt;#&lt;/span&gt;删&lt;/h3&gt;&lt;p&gt;这里的删的意思并不是说删除原字符串的内容，而是创建字符串的一个副本，再进行操作&lt;/p&gt;
&lt;p&gt;常见的有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;slice()&lt;/li&gt;
&lt;li&gt;substr()&lt;/li&gt;
&lt;li&gt;substring()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这三个方法都返回调用它们的字符串的一个子字符串，而且都接收一或两个参数。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; stringValue = &lt;span class=&#34;string&#34;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(stringValue.&lt;span class=&#34;title function_&#34;&gt;slice&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;lo world&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(stringValue.&lt;span class=&#34;title function_&#34;&gt;substring&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;lo world&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(stringValue.&lt;span class=&#34;title function_&#34;&gt;substr&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;lo world&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(stringValue.&lt;span class=&#34;title function_&#34;&gt;slice&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;lo w&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(stringValue.&lt;span class=&#34;title function_&#34;&gt;substring&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;lo w&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(stringValue.&lt;span class=&#34;title function_&#34;&gt;substr&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;lo worl&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;改&#34;&gt;&lt;a href=&#34;#改&#34; class=&#34;headerlink&#34; title=&#34;#改&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sIyVFNiU5NCVCOQ==&#34;&gt;#&lt;/span&gt;改&lt;/h3&gt;&lt;p&gt;这里改的意思也不是改变原字符串，而是创建字符串的一个副本，再进行操作&lt;/p&gt;
&lt;p&gt;常见的有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;trim()、trimLeft()、trimRight()&lt;/li&gt;
&lt;li&gt;repeat()&lt;/li&gt;
&lt;li&gt;padStart()、padEnd()&lt;/li&gt;
&lt;li&gt;toLowerCase()、 toUpperCase()&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;trim-、trimLeft-、trimRight&#34;&gt;&lt;a href=&#34;#trim-、trimLeft-、trimRight&#34; class=&#34;headerlink&#34; title=&#34;#trim()、trimLeft()、trimRight()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sI3RyaW0tJUUzJTgwJTgxdHJpbWxlZnQtJUUzJTgwJTgxdHJpbXJpZ2h0&#34;&gt;#&lt;/span&gt;trim()、trimLeft()、trimRight()&lt;/h4&gt;&lt;p&gt;删除前、后或前后所有空格符，再返回新的字符串&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; stringValue = &lt;span class=&#34;string&#34;&gt;&amp;quot; hello world &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; trimmedStringValue = stringValue.&lt;span class=&#34;title function_&#34;&gt;trim&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(stringValue); &lt;span class=&#34;comment&#34;&gt;// &amp;quot; hello world &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(trimmedStringValue); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;hello world&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h4 id=&#34;repeat&#34;&gt;&lt;a href=&#34;#repeat&#34; class=&#34;headerlink&#34; title=&#34;#repeat()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sI3JlcGVhdA==&#34;&gt;#&lt;/span&gt;repeat()&lt;/h4&gt;&lt;p&gt;接收一个整数参数，表示要将字符串复制多少次，然后返回拼接所有副本后的结果&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; stringValue = &lt;span class=&#34;string&#34;&gt;&amp;quot;na &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; copyResult = stringValue.&lt;span class=&#34;title function_&#34;&gt;repeat&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// na na &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h4 id=&#34;padEnd&#34;&gt;&lt;a href=&#34;#padEnd&#34; class=&#34;headerlink&#34; title=&#34;#padEnd()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sI3BhZGVuZA==&#34;&gt;#&lt;/span&gt;padEnd()&lt;/h4&gt;&lt;p&gt;复制字符串，如果小于指定长度，则在相应一边填充字符，直至满足长度条件&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; stringValue = &lt;span class=&#34;string&#34;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(stringValue.&lt;span class=&#34;title function_&#34;&gt;padStart&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// &amp;quot; foo&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(stringValue.&lt;span class=&#34;title function_&#34;&gt;padStart&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;......foo&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;toLowerCase-、-toUpperCase&#34;&gt;&lt;a href=&#34;#toLowerCase-、-toUpperCase&#34; class=&#34;headerlink&#34; title=&#34;#toLowerCase()、 toUpperCase()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sI3RvbG93ZXJjYXNlLSVFMyU4MCU4MS10b3VwcGVyY2FzZQ==&#34;&gt;#&lt;/span&gt;toLowerCase()、 toUpperCase()&lt;/h3&gt;&lt;p&gt;大小写转化&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; stringValue = &lt;span class=&#34;string&#34;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(stringValue.&lt;span class=&#34;title function_&#34;&gt;toUpperCase&lt;/span&gt;()); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;HELLO WORLD&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(stringValue.&lt;span class=&#34;title function_&#34;&gt;toLowerCase&lt;/span&gt;()); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;hello world&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;查&#34;&gt;&lt;a href=&#34;#查&#34; class=&#34;headerlink&#34; title=&#34;#查&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sIyVFNiU5RiVBNQ==&#34;&gt;#&lt;/span&gt;查&lt;/h3&gt;&lt;p&gt;除了通过索引的方式获取字符串的值，还可通过：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;chatAt()&lt;/li&gt;
&lt;li&gt;indexOf()&lt;/li&gt;
&lt;li&gt;startWith()&lt;/li&gt;
&lt;li&gt;includes()&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;charAt&#34;&gt;&lt;a href=&#34;#charAt&#34; class=&#34;headerlink&#34; title=&#34;#charAt()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sI2NoYXJhdA==&#34;&gt;#&lt;/span&gt;charAt()&lt;/h4&gt;&lt;p&gt;返回给定索引位置的字符，由传给方法的整数参数指定&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; message = &lt;span class=&#34;string&#34;&gt;&amp;quot;abcde&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(message.&lt;span class=&#34;title function_&#34;&gt;charAt&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h4 id=&#34;indexOf&#34;&gt;&lt;a href=&#34;#indexOf&#34; class=&#34;headerlink&#34; title=&#34;#indexOf()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sI2luZGV4b2Y=&#34;&gt;#&lt;/span&gt;indexOf()&lt;/h4&gt;&lt;p&gt;从字符串开头去搜索传入的字符串，并返回位置（如果没找到，则返回 -1 ）&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; stringValue = &lt;span class=&#34;string&#34;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(stringValue.&lt;span class=&#34;title function_&#34;&gt;indexOf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;o&amp;quot;&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h4 id=&#34;startWith-、includes&#34;&gt;&lt;a href=&#34;#startWith-、includes&#34; class=&#34;headerlink&#34; title=&#34;#startWith()、includes()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sI3N0YXJ0d2l0aC0lRTMlODAlODFpbmNsdWRlcw==&#34;&gt;#&lt;/span&gt;startWith()、includes()&lt;/h4&gt;&lt;p&gt;从字符串中搜索传入的字符串，并返回一个表示是否包含的布尔值&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; message = &lt;span class=&#34;string&#34;&gt;&amp;quot;foobarbaz&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(message.&lt;span class=&#34;title function_&#34;&gt;startsWith&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(message.&lt;span class=&#34;title function_&#34;&gt;startsWith&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(message.&lt;span class=&#34;title function_&#34;&gt;includes&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(message.&lt;span class=&#34;title function_&#34;&gt;includes&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;qux&amp;quot;&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;二、转换方法&#34;&gt;&lt;a href=&#34;#二、转换方法&#34; class=&#34;headerlink&#34; title=&#34;#二、转换方法&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sIyVFNCVCQSU4QyVFMyU4MCU4MSVFOCVCRCVBQyVFNiU4RCVBMiVFNiU5NiVCOSVFNiVCMyU5NQ==&#34;&gt;#&lt;/span&gt;二、转换方法&lt;/h2&gt;&lt;h3 id=&#34;split&#34;&gt;&lt;a href=&#34;#split&#34; class=&#34;headerlink&#34; title=&#34;#split&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sI3NwbGl0&#34;&gt;#&lt;/span&gt;split&lt;/h3&gt;&lt;p&gt;把字符串按照指定的分割符，拆分成数组中的每一项&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; str = &lt;span class=&#34;string&#34;&gt;&amp;quot;12+23+34&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; arr = str.&lt;span class=&#34;title function_&#34;&gt;split&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// [12,23,34]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;三、模板匹配方法&#34;&gt;&lt;a href=&#34;#三、模板匹配方法&#34; class=&#34;headerlink&#34; title=&#34;#三、模板匹配方法&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sIyVFNCVCOCU4OSVFMyU4MCU4MSVFNiVBOCVBMSVFNiU5RCVCRiVFNSU4QyVCOSVFOSU4NSU4RCVFNiU5NiVCOSVFNiVCMyU5NQ==&#34;&gt;#&lt;/span&gt;三、模板匹配方法&lt;/h2&gt;&lt;p&gt;针对正则表达式，字符串设计了几个方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;match()&lt;/li&gt;
&lt;li&gt;search()&lt;/li&gt;
&lt;li&gt;replace()&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;match&#34;&gt;&lt;a href=&#34;#match&#34; class=&#34;headerlink&#34; title=&#34;#match()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sI21hdGNo&#34;&gt;#&lt;/span&gt;match()&lt;/h3&gt;&lt;p&gt;接收一个参数，可以是一个正则表达式字符串，也可以是一个&lt;code&gt;RegExp&lt;/code&gt;对象，返回数组&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; text = &lt;span class=&#34;string&#34;&gt;&amp;quot;cat, bat, sat, fat&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; pattern = &lt;span class=&#34;regexp&#34;&gt;/.at/&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; matches = text.&lt;span class=&#34;title function_&#34;&gt;match&lt;/span&gt;(pattern);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(matches[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;cat&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;search&#34;&gt;&lt;a href=&#34;#search&#34; class=&#34;headerlink&#34; title=&#34;#search()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sI3NlYXJjaA==&#34;&gt;#&lt;/span&gt;search()&lt;/h3&gt;&lt;p&gt;接收一个参数，可以是一个正则表达式字符串，也可以是一个&lt;code&gt;RegExp&lt;/code&gt;对象，找到则返回匹配索引，否则返回 -1&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; text = &lt;span class=&#34;string&#34;&gt;&amp;quot;cat, bat, sat, fat&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; pos = text.&lt;span class=&#34;title function_&#34;&gt;search&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/at/&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(pos); &lt;span class=&#34;comment&#34;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;replace&#34;&gt;&lt;a href=&#34;#replace&#34; class=&#34;headerlink&#34; title=&#34;#replace()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvc3RyaW5nX2FwaS5odG1sI3JlcGxhY2U=&#34;&gt;#&lt;/span&gt;replace()&lt;/h3&gt;&lt;p&gt;接收两个参数，第一个参数为匹配的内容，第二个参数为替换的元素（可用函数）&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; text = &lt;span class=&#34;string&#34;&gt;&amp;quot;cat, bat, sat, fat&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; result = text.&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;at&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ond&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(result); &lt;span class=&#34;comment&#34;&gt;// &amp;quot;cond, bat, sat, fat&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="js" />
        <updated>2023-08-14T13:49:10.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/08/14/jsthis%E6%8C%87%E5%90%91%E9%97%AE%E9%A2%98/</id>
        <title>jsthis指向问题</title>
        <link rel="alternate" href="http://example.com/2023/08/14/jsthis%E6%8C%87%E5%90%91%E9%97%AE%E9%A2%98/"/>
        <content type="html">&lt;h1 id=&#34;js–this指向问题&#34;&gt;&lt;a href=&#34;#js–this指向问题&#34; class=&#34;headerlink&#34; title=&#34;js–this指向问题&#34;&gt;&lt;/a&gt;js–this指向问题&lt;/h1&gt;&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;h2 id=&#34;1-普通&#34;&gt;&lt;a href=&#34;#1-普通&#34; class=&#34;headerlink&#34; title=&#34;1.普通&#34;&gt;&lt;/a&gt;1.普通&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;this有三种指向 ，原则为谁调用指向谁。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;1-普通函数&#34;&gt;&lt;a href=&#34;#1-普通函数&#34; class=&#34;headerlink&#34; title=&#34;1.普通函数&#34;&gt;&lt;/a&gt;1.普通函数&lt;/h3&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var name = &amp;#x27;window&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function sayName () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(this.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sayName()// 指向window  打印window&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;2-new构造函数&#34;&gt;&lt;a href=&#34;#2-new构造函数&#34; class=&#34;headerlink&#34; title=&#34;2.new构造函数&#34;&gt;&lt;/a&gt;2.new构造函数&lt;/h3&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;const a = new Object()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.name = &amp;#x27;new&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.say = sayName&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(a.say())// 打印new  this指向实例a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3-对象方法&#34;&gt;&lt;a href=&#34;#3-对象方法&#34; class=&#34;headerlink&#34; title=&#34;3.对象方法&#34;&gt;&lt;/a&gt;3.对象方法&lt;/h3&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;const people = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    name: &amp;#x27;jake&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    age: 18,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    say : sayName&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;people.say() // this指向people 打印jake&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;2-箭头函数&#34;&gt;&lt;a href=&#34;#2-箭头函数&#34; class=&#34;headerlink&#34; title=&#34;2.箭头函数&#34;&gt;&lt;/a&gt;2.箭头函数&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;箭头函数中没有this, 但是根据作用域链 会向上找。定义在哪里 就在那里的上一层找&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var name = &amp;#x27;window&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const  sayName = ()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    conlose.log(this.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sayName() // 指向window, 打印 window&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const people = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    name: &amp;#x27;jake&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    age: 18,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    say : sayName&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;people.say // 打印window&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="js" />
        <updated>2023-08-14T02:56:55.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/08/13/js%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/</id>
        <title>js数组方法</title>
        <link rel="alternate" href="http://example.com/2023/08/13/js%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/"/>
        <content type="html">&lt;h1 id=&#34;js–数组方法&#34;&gt;&lt;a href=&#34;#js–数组方法&#34; class=&#34;headerlink&#34; title=&#34;js–数组方法&#34;&gt;&lt;/a&gt;js–数组方法&lt;/h1&gt;&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;blockquote&gt;
&lt;p&gt;数组常见方法：操作方法 排序方法 转换方法 迭代方法，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;1-操作方法&#34;&gt;&lt;a href=&#34;#1-操作方法&#34; class=&#34;headerlink&#34; title=&#34;1.操作方法&#34;&gt;&lt;/a&gt;1.操作方法&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;增  删  改  查&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;增&#34;&gt;&lt;a href=&#34;#增&#34; class=&#34;headerlink&#34; title=&#34;#增&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjJUU1JUEyJTlF&#34;&gt;#&lt;/span&gt;增&lt;/h3&gt;&lt;p&gt;下面前三种是对原数组产生影响的增添方法，第四种则不会对原数组产生影响&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;push()&lt;/li&gt;
&lt;li&gt;unshift()&lt;/li&gt;
&lt;li&gt;splice()&lt;/li&gt;
&lt;li&gt;concat()&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;push&#34;&gt;&lt;a href=&#34;#push&#34; class=&#34;headerlink&#34; title=&#34;#push()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjcHVzaA==&#34;&gt;#&lt;/span&gt;push()&lt;/h4&gt;&lt;p&gt;&lt;code&gt;push()&lt;/code&gt;方法接收任意数量的参数，并将它们添加到数组末尾，返回数组的最新长度&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; colors = []; &lt;span class=&#34;comment&#34;&gt;// 创建一个数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; count = colors.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 推入两项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(count) &lt;span class=&#34;comment&#34;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h4 id=&#34;unshift&#34;&gt;&lt;a href=&#34;#unshift&#34; class=&#34;headerlink&#34; title=&#34;#unshift()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjdW5zaGlmdA==&#34;&gt;#&lt;/span&gt;unshift()&lt;/h4&gt;&lt;p&gt;unshift()在数组开头添加任意多个值，然后返回新的数组长度&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; colors = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Array&lt;/span&gt;(); &lt;span class=&#34;comment&#34;&gt;// 创建一个数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; count = colors.&lt;span class=&#34;title function_&#34;&gt;unshift&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 从数组开头推入两项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;alert&lt;/span&gt;(count); &lt;span class=&#34;comment&#34;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h4 id=&#34;splice&#34;&gt;&lt;a href=&#34;#splice&#34; class=&#34;headerlink&#34; title=&#34;#splice&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjc3BsaWNl&#34;&gt;#&lt;/span&gt;splice&lt;/h4&gt;&lt;p&gt;传入三个参数，分别是开始位置、0（要删除的元素数量）、插入的元素，返回空数组&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; colors = [&lt;span class=&#34;string&#34;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; removed = colors.&lt;span class=&#34;title function_&#34;&gt;splice&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(colors) &lt;span class=&#34;comment&#34;&gt;// red,yellow,orange,green,blue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(removed) &lt;span class=&#34;comment&#34;&gt;// []&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h4 id=&#34;concat&#34;&gt;&lt;a href=&#34;#concat&#34; class=&#34;headerlink&#34; title=&#34;#concat()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjY29uY2F0&#34;&gt;#&lt;/span&gt;concat()&lt;/h4&gt;&lt;p&gt;首先会创建一个当前数组的副本，然后再把它的参数添加到副本末尾，最后返回这个新构建的数组，不会影响原始数组&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; colors = [&lt;span class=&#34;string&#34;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; colors2 = colors.&lt;span class=&#34;title function_&#34;&gt;concat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;, [&lt;span class=&#34;string&#34;&gt;&amp;quot;black&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;brown&amp;quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(colors); &lt;span class=&#34;comment&#34;&gt;// [&amp;quot;red&amp;quot;, &amp;quot;green&amp;quot;,&amp;quot;blue&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(colors2); &lt;span class=&#34;comment&#34;&gt;// [&amp;quot;red&amp;quot;, &amp;quot;green&amp;quot;, &amp;quot;blue&amp;quot;, &amp;quot;yellow&amp;quot;, &amp;quot;black&amp;quot;, &amp;quot;brown&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;删&#34;&gt;&lt;a href=&#34;#删&#34; class=&#34;headerlink&#34; title=&#34;#删&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjJUU1JTg4JUEw&#34;&gt;#&lt;/span&gt;删&lt;/h3&gt;&lt;p&gt;下面三种都会影响原数组，最后一项不影响原数组：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pop()&lt;/li&gt;
&lt;li&gt;shift()&lt;/li&gt;
&lt;li&gt;splice()&lt;/li&gt;
&lt;li&gt;slice()&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;pop&#34;&gt;&lt;a href=&#34;#pop&#34; class=&#34;headerlink&#34; title=&#34;#pop()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjcG9w&#34;&gt;#&lt;/span&gt;pop()&lt;/h4&gt;&lt;p&gt;&lt;code&gt;pop()&lt;/code&gt; 方法用于删除数组的最后一项，同时减少数组的&lt;code&gt;length&lt;/code&gt; 值，返回被删除的项&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; colors = [&lt;span class=&#34;string&#34;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; item = colors.&lt;span class=&#34;title function_&#34;&gt;pop&lt;/span&gt;(); &lt;span class=&#34;comment&#34;&gt;// 取得最后一项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(item) &lt;span class=&#34;comment&#34;&gt;// green&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(colors.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h4 id=&#34;shift&#34;&gt;&lt;a href=&#34;#shift&#34; class=&#34;headerlink&#34; title=&#34;#shift()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjc2hpZnQ=&#34;&gt;#&lt;/span&gt;shift()&lt;/h4&gt;&lt;p&gt;&lt;code&gt;shift()&lt;/code&gt;方法用于删除数组的第一项，同时减少数组的&lt;code&gt;length&lt;/code&gt; 值，返回被删除的项&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; colors = [&lt;span class=&#34;string&#34;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; item = colors.&lt;span class=&#34;title function_&#34;&gt;shift&lt;/span&gt;(); &lt;span class=&#34;comment&#34;&gt;// 取得第一项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(item) &lt;span class=&#34;comment&#34;&gt;// red&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(colors.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h4 id=&#34;splice-1&#34;&gt;&lt;a href=&#34;#splice-1&#34; class=&#34;headerlink&#34; title=&#34;#splice()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjc3BsaWNlLTI=&#34;&gt;#&lt;/span&gt;splice()&lt;/h4&gt;&lt;p&gt;传入两个参数，分别是开始位置，删除元素的数量，返回包含删除元素的数组&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; colors = [&lt;span class=&#34;string&#34;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; removed = colors.&lt;span class=&#34;title function_&#34;&gt;splice&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 删除第一项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(colors); &lt;span class=&#34;comment&#34;&gt;// green,blue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(removed); &lt;span class=&#34;comment&#34;&gt;// red，只有一个元素的数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;slice&#34;&gt;&lt;a href=&#34;#slice&#34; class=&#34;headerlink&#34; title=&#34;#slice()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjc2xpY2U=&#34;&gt;#&lt;/span&gt;slice()&lt;/h3&gt;&lt;p&gt;slice() 用于创建一个包含原有数组中一个或多个元素的新数组，不会影响原始数组&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; colors = [&lt;span class=&#34;string&#34;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;purple&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; colors2 = colors.&lt;span class=&#34;title function_&#34;&gt;slice&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; colors3 = colors.&lt;span class=&#34;title function_&#34;&gt;slice&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(colors)   &lt;span class=&#34;comment&#34;&gt;// red,green,blue,yellow,purple&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;concole.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(colors2); &lt;span class=&#34;comment&#34;&gt;// green,blue,yellow,purple&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;concole.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(colors3); &lt;span class=&#34;comment&#34;&gt;// green,blue,yellow&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h4 id=&#34;改&#34;&gt;&lt;a href=&#34;#改&#34; class=&#34;headerlink&#34; title=&#34;#改&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjJUU2JTk0JUI5&#34;&gt;#&lt;/span&gt;改&lt;/h4&gt;&lt;p&gt;即修改原来数组的内容，常用&lt;code&gt;splice&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;splice-2&#34;&gt;&lt;a href=&#34;#splice-2&#34; class=&#34;headerlink&#34; title=&#34;#splice()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjc3BsaWNlLTM=&#34;&gt;#&lt;/span&gt;splice()&lt;/h4&gt;&lt;p&gt;传入三个参数，分别是开始位置，要删除元素的数量，要插入的任意多个元素，返回删除元素的数组，对原数组产生影响&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; colors = [&lt;span class=&#34;string&#34;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; removed = colors.&lt;span class=&#34;title function_&#34;&gt;splice&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;purple&amp;quot;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 插入两个值，删除一个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(colors); &lt;span class=&#34;comment&#34;&gt;// red,red,purple,blue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(removed); &lt;span class=&#34;comment&#34;&gt;// green，只有一个元素的数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h4 id=&#34;查&#34;&gt;&lt;a href=&#34;#查&#34; class=&#34;headerlink&#34; title=&#34;#查&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjJUU2JTlGJUE1&#34;&gt;#&lt;/span&gt;查&lt;/h4&gt;&lt;p&gt;即查找元素，返回元素坐标或者元素值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;indexOf()&lt;/li&gt;
&lt;li&gt;includes()&lt;/li&gt;
&lt;li&gt;find()&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;indexOf&#34;&gt;&lt;a href=&#34;#indexOf&#34; class=&#34;headerlink&#34; title=&#34;#indexOf()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjaW5kZXhvZg==&#34;&gt;#&lt;/span&gt;indexOf()&lt;/h4&gt;&lt;p&gt;返回要查找的元素在数组中的位置，如果没找到则返回 -1&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; numbers = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;numbers.&lt;span class=&#34;title function_&#34;&gt;indexOf&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h4 id=&#34;includes&#34;&gt;&lt;a href=&#34;#includes&#34; class=&#34;headerlink&#34; title=&#34;#includes()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjaW5jbHVkZXM=&#34;&gt;#&lt;/span&gt;includes()&lt;/h4&gt;&lt;p&gt;返回要查找的元素在数组中的位置，找到返回&lt;code&gt;true&lt;/code&gt;，否则&lt;code&gt;false&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; numbers = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;numbers.&lt;span class=&#34;title function_&#34;&gt;includes&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h4 id=&#34;find&#34;&gt;&lt;a href=&#34;#find&#34; class=&#34;headerlink&#34; title=&#34;#find()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjZmluZA==&#34;&gt;#&lt;/span&gt;find()&lt;/h4&gt;&lt;p&gt;返回第一个匹配的元素&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; people = [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Matt&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;age&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Nicholas&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;age&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;29&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;people.&lt;span class=&#34;title function_&#34;&gt;find&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;element, index, array&lt;/span&gt;) =&amp;gt;&lt;/span&gt; element.&lt;span class=&#34;property&#34;&gt;age&lt;/span&gt; &amp;lt; &lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// // &amp;#123;name: &amp;quot;Matt&amp;quot;, age: 27&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;2-排序方法&#34;&gt;&lt;a href=&#34;#2-排序方法&#34; class=&#34;headerlink&#34; title=&#34;2.排序方法&#34;&gt;&lt;/a&gt;2.排序方法&lt;/h2&gt;&lt;p&gt;数组有两个方法可以用来对元素重新排序：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reverse()&lt;/li&gt;
&lt;li&gt;sort()&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reverse&#34;&gt;&lt;a href=&#34;#reverse&#34; class=&#34;headerlink&#34; title=&#34;#reverse()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjcmV2ZXJzZQ==&#34;&gt;#&lt;/span&gt;reverse()&lt;/h3&gt;&lt;p&gt;顾名思义，将数组元素方向反转&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; values = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;values.&lt;span class=&#34;title function_&#34;&gt;reverse&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;alert&lt;/span&gt;(values); &lt;span class=&#34;comment&#34;&gt;// 5,4,3,2,1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;sort&#34;&gt;&lt;a href=&#34;#sort&#34; class=&#34;headerlink&#34; title=&#34;#sort()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjc29ydA==&#34;&gt;#&lt;/span&gt;sort()&lt;/h3&gt;&lt;p&gt;sort()方法接受一个比较函数，用于判断哪个值应该排在前面&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;compare&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;value1, value2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (value1 &amp;lt; value2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (value1 &amp;gt; value2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; values = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;values.&lt;span class=&#34;title function_&#34;&gt;sort&lt;/span&gt;(compare);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;alert&lt;/span&gt;(values); &lt;span class=&#34;comment&#34;&gt;// 0,1,5,10,15&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;3-转换方法&#34;&gt;&lt;a href=&#34;#3-转换方法&#34; class=&#34;headerlink&#34; title=&#34;3.转换方法&#34;&gt;&lt;/a&gt;3.转换方法&lt;/h2&gt;&lt;h3 id=&#34;join&#34;&gt;&lt;a href=&#34;#join&#34; class=&#34;headerlink&#34; title=&#34;join()&#34;&gt;&lt;/a&gt;join()&lt;/h3&gt;&lt;p&gt;join() 方法接收一个参数，即字符串分隔符，返回包含所有项的字符串&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; colors = [&lt;span class=&#34;string&#34;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;alert&lt;/span&gt;(colors.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// red,green,blue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;alert&lt;/span&gt;(colors.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;||&amp;quot;&lt;/span&gt;)); &lt;span class=&#34;comment&#34;&gt;// red||green||blue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;4-迭代方法&#34;&gt;&lt;a href=&#34;#4-迭代方法&#34; class=&#34;headerlink&#34; title=&#34;4.迭代方法&#34;&gt;&lt;/a&gt;4.迭代方法&lt;/h2&gt;&lt;p&gt;常用来迭代数组的方法（都不改变原数组）有如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;some()&lt;/li&gt;
&lt;li&gt;every()&lt;/li&gt;
&lt;li&gt;forEach()&lt;/li&gt;
&lt;li&gt;filter()&lt;/li&gt;
&lt;li&gt;map()&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;some&#34;&gt;&lt;a href=&#34;#some&#34; class=&#34;headerlink&#34; title=&#34;#some()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjc29tZQ==&#34;&gt;#&lt;/span&gt;some()&lt;/h3&gt;&lt;p&gt;对数组每一项都运行传入的测试函数，如果至少有1个元素返回 true ，则这个方法返回 true&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; numbers = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; someResult = numbers.&lt;span class=&#34;title function_&#34;&gt;some&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;item, index, array&lt;/span&gt;) =&amp;gt;&lt;/span&gt; item &amp;gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(someResult) &lt;span class=&#34;comment&#34;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;every&#34;&gt;&lt;a href=&#34;#every&#34; class=&#34;headerlink&#34; title=&#34;#every()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjZXZlcnk=&#34;&gt;#&lt;/span&gt;every()&lt;/h3&gt;&lt;p&gt;对数组每一项都运行传入的测试函数，如果所有元素都返回 true ，则这个方法返回 true&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; numbers = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; everyResult = numbers.&lt;span class=&#34;title function_&#34;&gt;every&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;item, index, array&lt;/span&gt;) =&amp;gt;&lt;/span&gt; item &amp;gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(everyResult) &lt;span class=&#34;comment&#34;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;forEach&#34;&gt;&lt;a href=&#34;#forEach&#34; class=&#34;headerlink&#34; title=&#34;#forEach()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjZm9yZWFjaA==&#34;&gt;#&lt;/span&gt;forEach()&lt;/h3&gt;&lt;p&gt;对数组每一项都运行传入的函数，没有返回值&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; numbers = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;numbers.&lt;span class=&#34;title function_&#34;&gt;forEach&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;item, index, array&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 执行某些操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;filter&#34;&gt;&lt;a href=&#34;#filter&#34; class=&#34;headerlink&#34; title=&#34;#filter()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjZmlsdGVy&#34;&gt;#&lt;/span&gt;filter()&lt;/h3&gt;&lt;p&gt;对数组每一项都运行传入的函数，函数返回 &lt;code&gt;true&lt;/code&gt; 的项会组成数组之后返回&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; numbers = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; filterResult = numbers.&lt;span class=&#34;title function_&#34;&gt;filter&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;item, index, array&lt;/span&gt;) =&amp;gt;&lt;/span&gt; item &amp;gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(filterResult); &lt;span class=&#34;comment&#34;&gt;// 3,4,5,4,3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;map&#34;&gt;&lt;a href=&#34;#map&#34; class=&#34;headerlink&#34; title=&#34;#map()&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYXJyYXlfYXBpLmh0bWwjbWFw&#34;&gt;#&lt;/span&gt;map()&lt;/h3&gt;&lt;p&gt;对数组每一项都运行传入的函数，返回由每次函数调用的结果构成的数组&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; numbers = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; mapResult = numbers.&lt;span class=&#34;title function_&#34;&gt;map&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;item, index, array&lt;/span&gt;) =&amp;gt;&lt;/span&gt; item * &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(mapResult) &lt;span class=&#34;comment&#34;&gt;// 2,4,6,8,10,8,6,4,2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;5-数组扁平化&#34;&gt;&lt;a href=&#34;#5-数组扁平化&#34; class=&#34;headerlink&#34; title=&#34;5.数组扁平化&#34;&gt;&lt;/a&gt;5.数组扁平化&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let arr = [1, [2, [3, 4]]];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function flatten(arr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return arr.flat(Infinity);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(flatten(arr)); //  [1, 2, 3, 4，5]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;6-数组求和&#34;&gt;&lt;a href=&#34;#6-数组求和&#34; class=&#34;headerlink&#34; title=&#34;6.数组求和&#34;&gt;&lt;/a&gt;6.数组求和&lt;/h2&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;arr.&lt;span class=&#34;title function_&#34;&gt;reduce&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;prev,cur,index,arr&lt;/span&gt;)=&amp;gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;,init)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;arr: 表示将要原数组&lt;/li&gt;
&lt;li&gt;prev:表示上一次调用回调时的返回值，或者初始值init&lt;/li&gt;
&lt;li&gt;cur:表示当前正在处理的数组元素&lt;/li&gt;
&lt;li&gt;index:表示正在处理的数组元素的索引，若提供init值，则索引为0，否则索引为1&lt;/li&gt;
&lt;li&gt;init: 表示初始值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;案例&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;javascript复制代码&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; arr = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; sum = arr.&lt;span class=&#34;title function_&#34;&gt;reduce&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;pre,cur&lt;/span&gt;)=&amp;gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; pre +cur&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(sum)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="js" />
        <updated>2023-08-13T12:53:27.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/08/12/js%E5%8E%9F%E5%9E%8B%E5%8E%9F%E5%9E%8B%E9%93%BE/</id>
        <title>js原型原型链</title>
        <link rel="alternate" href="http://example.com/2023/08/12/js%E5%8E%9F%E5%9E%8B%E5%8E%9F%E5%9E%8B%E9%93%BE/"/>
        <content type="html">&lt;h1 id=&#34;js–原型-原型链&#34;&gt;&lt;a href=&#34;#js–原型-原型链&#34; class=&#34;headerlink&#34; title=&#34;js–原型 原型链&#34;&gt;&lt;/a&gt;js–原型 原型链&lt;/h1&gt;&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;blockquote&gt;
&lt;p&gt;每个函数都有一个prototype, 每个对象都有一个-proto- 指向其原型对象prototype&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;prototype：&#34;&gt;&lt;a href=&#34;#prototype：&#34; class=&#34;headerlink&#34; title=&#34;prototype：&#34;&gt;&lt;/a&gt;prototype：&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;每个函数都有prototype属性 称之为原型， 因为这个属性的值是个对象，也成为原型对象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;作用&#34;&gt;&lt;a href=&#34;#作用&#34; class=&#34;headerlink&#34; title=&#34;作用&#34;&gt;&lt;/a&gt;作用&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;存放一些属性和方法&lt;/p&gt;
&lt;p&gt;实现继承&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;proto-：&#34;&gt;&lt;a href=&#34;#proto-：&#34; class=&#34;headerlink&#34; title=&#34;-proto-_：&#34;&gt;&lt;/a&gt;-proto-_：&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;每个对象对象都有-proto-属性&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;作用：&#34;&gt;&lt;a href=&#34;#作用：&#34; class=&#34;headerlink&#34; title=&#34;作用：&#34;&gt;&lt;/a&gt;作用：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;这个属性指向它的原型对象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;const arr = new Array(1,2,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr.__proto__ === Array.prototype // true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="js" />
        <updated>2023-08-12T11:38:23.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/08/12/js%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
        <title>js判断数据类型</title>
        <link rel="alternate" href="http://example.com/2023/08/12/js%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
        <content type="html">&lt;h1 id=&#34;js–typeof与instanceof&#34;&gt;&lt;a href=&#34;#js–typeof与instanceof&#34; class=&#34;headerlink&#34; title=&#34;js–typeof与instanceof&#34;&gt;&lt;/a&gt;js–typeof与instanceof&lt;/h1&gt;&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;h2 id=&#34;js数据类型&#34;&gt;&lt;a href=&#34;#js数据类型&#34; class=&#34;headerlink&#34; title=&#34;js数据类型&#34;&gt;&lt;/a&gt;js数据类型&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Null&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;引用数据类型&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;typeof主要用于判断基本数据类型&#34;&gt;&lt;a href=&#34;#typeof主要用于判断基本数据类型&#34; class=&#34;headerlink&#34; title=&#34;typeof主要用于判断基本数据类型&#34;&gt;&lt;/a&gt;typeof主要用于判断基本数据类型&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// Numbers &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typeof 37 === &amp;#x27;number&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Strings &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typeof &amp;quot;&amp;quot; === &amp;#x27;string&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Booleans &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typeof true === &amp;#x27;boolean&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Symbols &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typeof Symbol(&amp;#x27;foo&amp;#x27;) === &amp;#x27;symbol&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Undefined &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typeof undefined === &amp;#x27;undefined&amp;#x27;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typeof blabla === &amp;#x27;undefined&amp;#x27;; // 一个未定义的变量,或者一个定义了却未赋初值的变量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Objects &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typeof &amp;#123;a:1&amp;#125; === &amp;#x27;object&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;type [1,2,3] = &amp;#x27;object&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;------------------------&amp;#x27;下面是不是有点奇怪？&amp;#x27;--------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typeof function()&amp;#123;&amp;#125; === &amp;#x27;function&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typeof null === &amp;#x27;object&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;instanceof判断该对象是谁的实例&#34;&gt;&lt;a href=&#34;#instanceof判断该对象是谁的实例&#34; class=&#34;headerlink&#34; title=&#34;instanceof判断该对象是谁的实例&#34;&gt;&lt;/a&gt;instanceof判断该对象是谁的实例&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;instanceof&lt;/code&gt;的判断就是根据原型链进行搜寻，在对象obj1的原型链上如果存在另一个对象obj2的原型属性，那么表达式（&lt;code&gt;obj1 instanceof obj2&lt;/code&gt;）返回值为true；否则返回false。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function Parent()&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function Child()&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function Other()&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Child.prototype = new Parent();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let child = new Child();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;child instanceof Child; // true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;child instanceof Parent; // true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;child instanceof Object; // true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;child instanceof Other; // false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;typeof与instanceof都是判断数据类型的方法，区别如下：&#34;&gt;&lt;a href=&#34;#typeof与instanceof都是判断数据类型的方法，区别如下：&#34; class=&#34;headerlink&#34; title=&#34;typeof与instanceof都是判断数据类型的方法，区别如下：&#34;&gt;&lt;/a&gt;typeof与instanceof都是判断数据类型的方法，区别如下：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;typeof会返回一个变量的基本类型，instanceof返回的是一个布尔值&lt;/li&gt;
&lt;li&gt;instanceof 可以准确地判断复杂引用数据类型，但是不能正确判断基础数据类型&lt;/li&gt;
&lt;li&gt;而typeof 也存在弊端，它虽然可以判断基础数据类型（null 除外），但是引用数据类型中，除了function 类型以外，其他的也无法判断&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="js" />
        <updated>2023-08-12T11:29:14.000Z</updated>
    </entry>
</feed>
